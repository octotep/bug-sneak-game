[gd_scene load_steps=4 format=2]

[ext_resource path="res://assets/zap_small.png" type="Texture" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Area2D

var hover_speed = 0.2
var hover_direction = 1
var offset = 0
var offset_max = 2

signal approached_charge(current_charge)
signal retreated_from_charge

func _ready():
	var _ret
	for player in get_tree().get_nodes_in_group(\"player\"):
		_ret = connect(\"approached_charge\", player, \"_approached_charge\")
		_ret = connect(\"retreated_from_charge\", player, \"_retreated_from_charge\")

func _process(_delta):
	
	if offset > offset_max:
		hover_direction = -1
	if offset < offset_max * -1:
		hover_direction = 1
	
	offset += hover_speed * hover_direction
	$Sprite.position.y = offset
	
	update()

func collected():
	queue_free()

func _on_ZapRecharge_body_entered(body):
	if body.is_in_group(\"player\"):
		emit_signal(\"approached_charge\", self)

func _on_ZapRecharge_body_exited(body):
	if body.is_in_group(\"player\"):
		emit_signal(\"retreated_from_charge\")
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8, 16 )

[node name="ZapRecharge" type="Area2D"]
script = SubResource( 1 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 2 )

[connection signal="body_entered" from="." to="." method="_on_ZapRecharge_body_entered"]
[connection signal="body_exited" from="." to="." method="_on_ZapRecharge_body_exited"]
